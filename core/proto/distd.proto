syntax = "proto3";
package distd;

service Distd {
  rpc Register(ClientRegister) returns (ServerMetadata);
  rpc Fetch(ClientKeepAlive) returns (ServerMetadata);
  rpc AdvHashes(Hashes) returns (Acknowledge);
  rpc TreeTransfer(ItemRequest) returns (stream SerializedTree);
}

message Hashes { repeated bytes hashes = 1; }

message ItemRequest {
  string item_path = 1; // This is out primary key to identify an item
  reserved 2; //bytes item_root = 2; // root hash of the item
  optional int32 request_version = 3; // if not specified latest is returned
  optional int32 from_version = 4;
  optional Hashes hashes = 5;
}

message SerializedTree { bytes bitcode_hashtree = 1; }

message Acknowledge { EnumAcknowledge ack = 1; }

message ClientKeepAlive {}

message ServerMetadata {
  bytes serialized = 1;    // yet to be defined
  optional bytes uuid = 2; // Returned only on client registration
}

message ClientRegister {
  string name = 1;
  string version = 2;
}

enum EnumAcknowledge {
  // option allow_alias = true;
  ACK_UNSPECIFIED = 0;
  ACK_OK = 1;
  ACK_CONFUSED = 2; // Something wrong, provided invalid hash maybe?
  ACK_IGNORED = 3;  // Request well formed but will be ignored (item didn't
                    // change from last hashes maybe)
}
